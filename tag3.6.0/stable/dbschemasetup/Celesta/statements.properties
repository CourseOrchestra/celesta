#configuration
#Tue Dec 17 23:09:28 MSK 2013
plsql.dropFunction.text=DROP {type} {name}
schema.create.text=CREATE SCHEMA {name}
schema.drop.text=DROP SCHEMA {name}
table.column.comment.text=ALTER TABLE {table} MODIFY {column} {type}{unsigned}{mandatory}{defo}{identity} COMMENT '{comment}'
table.column.create.text=ALTER TABLE {table} ADD {column} {type}{unsigned}{mandatory}{defo}{identity}
table.column.createInline.text={column} {type}{unsigned}{mandatory}{defo}{identity}
table.column.drop.text=ALTER TABLE {table} DROP COLUMN {column}
table.column.dropMandatory.text=ALTER TABLE {table} MODIFY {column} {type}{unsigned} NULL {defo}{identity}
table.column.keywords.default.text=\ DEFAULT {defo}
table.column.keywords.identity.text=IDENTITY
table.column.keywords.notNull.text=\ NOT NULL
table.column.keywords.null.text=\ NULL
table.column.keywords.unsigned.text=\ UNSIGNED
table.column.modifyType.text=ALTER TABLE {table} MODIFY {column} {type}{unsigned}{mandatory}{defo}{identity}
table.column.rename.text=ALTER TABLE {table} CHANGE COLUMN {column} {new_name} {type}{unsigned}{mandatory}{defo}{identity}
table.column.removeDefault.text=ALTER TABLE {table} ALTER COLUMN {column} DROP DEFAULT
table.column.setDefault.text=ALTER TABLE {table} ALTER COLUMN {column} SET DEFAULT {defo}
table.column.setMandatory.text=ALTER TABLE {table} MODIFY {column} {type}{unsigned} NOT NULL {defo}{identity}
table.comment.text=ALTER TABLE {table} COMMENT '{comment}' 
table.constraint.create.text=ALTER TABLE {table} ADD CONSTRAINT {name} CHECK ( {body} ) 
table.constraint.drop.text=ALTER TABLE {table} DROP CONSTRAINT {name}
table.constraint.rename.text=ALTER TABLE {table} RENAME CONSTRAINT {name} TO {new_name}
table.create.text=CREATE TABLE {table} ( {body} ) {suffix}
table.drop.text=DROP TABLE {name}
table.fk.create.text=ALTER TABLE {table} ADD CONSTRAINT {name} FOREIGN KEY ( {columns} ) REFERENCES {target_table}( {target_columns} ) {delete_action} {update_action}
table.fk.createInline.text=CONSTRAINT {name} FOREIGN KEY ( {columns} ) REFERENCES {target_table}( {target_columns} ) {delete_action} {update_action}
table.fk.deleteAction.cascade.text=ON DELETE CASCADE
table.fk.deleteAction.noAction.text=ON DELETE NO ACTION
table.fk.deleteAction.restrict.text=ON DELETE RESTRICT
table.fk.deleteAction.setNull.text=ON DELETE SET NULL
table.fk.drop.text=ALTER TABLE {table} DROP FOREIGN KEY {name}
table.fk.updateAction.cascade.text=ON UPDATE CASCADE
table.fk.updateAction.noAction.text=ON UPDATE NO ACTION
table.fk.updateAction.restrict.text=ON UPDATE RESTRICT
table.fk.updateAction.setNull.text=ON UPDATE SET NULL
table.index.create.text=CREATE INDEX {name} ON {table} ( {columns} ) {suffix}
table.index.drop.text=DROP INDEX {name} ON {table}
table.index.rename.text=RENAME INDEX {name} TO {new_name}
table.pk.create.text=ALTER TABLE {table} ADD CONSTRAINT {name} PRIMARY KEY ( {columns} ) {suffix}
table.pk.createInline.text=CONSTRAINT {name} PRIMARY KEY ( {columns} )
table.pk.drop.text=ALTER TABLE {table} DROP PRIMARY KEY 
table.rename.text=ALTER TABLE {table} RENAME TO {new_name}
table.uniqueIndex.create.text=ALTER TABLE {table} ADD CONSTRAINT {name} UNIQUE ( {columns} ) {suffix}
table.uniqueIndex.createInline.text=CONSTRAINT {name} UNIQUE ( {columns} )
table.uniqueIndex.drop.text=ALTER TABLE {table} DROP INDEX {name}
table.uniqueIndex.rename.text=RENAME INDEX {name} TO {new_name}
view.create.text=CREATE VIEW {name} AS {text}
view.drop.text=DROP VIEW {name}
